import{l as e,c as a,a5 as i,a as r}from"./chunks/framework.DJyBczLA.js";const u=JSON.parse('{"title":"GSAP中文文档 - timeline 方法 - 进度（progress）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/timeline/methods/progress.md","filePath":"gsap/timeline/methods/progress.md","lastUpdated":1733646466000}'),l={name:"gsap/timeline/methods/progress.md"};function n(t,s,p,o,d,h){return r(),a("div",null,s[0]||(s[0]=[i(`<h1 id="gsap中文文档-timeline-方法-进度-progress" tabindex="-1">GSAP中文文档 - timeline 方法 - 进度（progress） <a class="header-anchor" href="#gsap中文文档-timeline-方法-进度-progress" aria-label="Permalink to &quot;GSAP中文文档 - timeline 方法 - 进度（progress）&quot;">​</a></h1><h2 id="进度-progress" tabindex="-1">进度（progress） <a class="header-anchor" href="#进度-progress" aria-label="Permalink to &quot;进度（progress）&quot;">​</a></h2><p>获取或设置时间线的进度，这是一个介于0和1之间的值，表示虚拟播放头的位置（不包括重复），其中0是开始，0.5是完成一半，1是完成。如果时间线定义了一个非零的 <code>repeat</code>，则进度和 <code>totalProgress</code> 将会不同，因为 <code>progress</code> 不包括任何重复或重复延迟，而 <code>totalProgress</code> 包括。例如，如果一个时间线实例设置为重复一次，在第一个周期结束时 <code>totalProgress</code> 只会是0.5，而 <code>progress</code> 会是1。如果您在整个动画过程中观察这两个属性，您会看到进度从0到1两次（每个周期一次），而 <code>totalProgress</code> 从0到1一次。</p><p>此方法既作为获取器也作为设置器。省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用，如 <code>tl.progress(0.5).play();</code></p><h3 id="方法签名" tabindex="-1">方法签名 <a class="header-anchor" href="#方法签名" aria-label="Permalink to &quot;方法签名&quot;">​</a></h3><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>progress(value: Number): [Number | self]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用。</p><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><strong>value</strong>: Number（可选） <ul><li>设置时间线的进度值，范围在0到1之间。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>Number <ul><li>如果未提供参数，返回当前进度值。</li></ul></li><li>self <ul><li>如果提供了参数，返回实例本身以便于链式调用。</li></ul></li></ul><h2 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前进度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将进度设置为完成四分之一</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,13)]))}const g=e(l,[["render",n]]);export{u as __pageData,g as default};
