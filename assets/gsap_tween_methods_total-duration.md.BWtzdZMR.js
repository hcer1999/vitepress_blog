import{l as s,a as e,c as t,a5 as i}from"./chunks/framework.DAV8GD4U.js";const c=JSON.parse('{"title":"GSAP中文文档 - tween 方法 - 总持续时间（totalDuration）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/tween/methods/total-duration.md","filePath":"gsap/tween/methods/total-duration.md","lastUpdated":1731921447000}'),n={name:"gsap/tween/methods/total-duration.md"};function l(r,a,o,p,d,h){return e(),t("div",null,a[0]||(a[0]=[i(`<h1 id="gsap中文文档-tween-方法-总持续时间-totalduration" tabindex="-1">GSAP中文文档 - tween 方法 - 总持续时间（totalDuration） <a class="header-anchor" href="#gsap中文文档-tween-方法-总持续时间-totalduration" aria-label="Permalink to &quot;GSAP中文文档 - tween 方法 - 总持续时间（totalDuration）&quot;">​</a></h1><h2 id="总持续时间-totalduration" tabindex="-1">总持续时间（totalDuration） <a class="header-anchor" href="#总持续时间-totalduration" aria-label="Permalink to &quot;总持续时间（totalDuration）&quot;">​</a></h2><p>省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用。</p><p>获取或设置包括任何重复或重复延迟在内的补间的总持续时间（以秒为单位）。相比之下，<code>duration</code> <strong>不</strong>包括重复和重复延迟。例如，如果补间有一个 <code>duration</code> 为 10，<code>repeat</code> 为 1 和 <code>repeatDelay</code> 为 2，那么 <code>totalDuration</code> 将是 22。</p><p>此方法既作为获取器也作为设置器。省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用。</p><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><strong>value</strong>: Number（可选） <ul><li>设置补间的总持续时间。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>Number <ul><li>如果未提供参数，返回当前总持续时间。</li></ul></li><li>self <ul><li>如果提供了参数，返回实例本身以便于链式调用。</li></ul></li></ul><h3 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取总持续时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myTween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">totalDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置总持续时间为10秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myTween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">totalDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,11)]))}const k=s(n,[["render",l]]);export{c as __pageData,k as default};
