import{l as a,a as s,c as i,a5 as o}from"./chunks/framework.DAV8GD4U.js";const y=JSON.parse('{"title":"GSAP中文文档 - timeline 方法 - 悠悠效果（yoyo）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/timeline/methods/yoyo.md","filePath":"gsap/timeline/methods/yoyo.md","lastUpdated":1731921447000}'),t={name:"gsap/timeline/methods/yoyo.md"};function l(n,e,r,d,p,c){return s(),i("div",null,e[0]||(e[0]=[o(`<h1 id="gsap中文文档-timeline-方法-悠悠效果-yoyo" tabindex="-1">GSAP中文文档 - timeline 方法 - 悠悠效果（yoyo） <a class="header-anchor" href="#gsap中文文档-timeline-方法-悠悠效果-yoyo" aria-label="Permalink to &quot;GSAP中文文档 - timeline 方法 - 悠悠效果（yoyo）&quot;">​</a></h1><h2 id="悠悠效果-yoyo" tabindex="-1">悠悠效果（yoyo） <a class="header-anchor" href="#悠悠效果-yoyo" aria-label="Permalink to &quot;悠悠效果（yoyo）&quot;">​</a></h2><p>yoyo 方法用于获取或设置时间轴的 yoyo 状态，当设置为 true 时，时间轴在每次重复时会来回播放，即在正向和反向之间交替进行。</p><h3 id="方法签名" tabindex="-1">方法签名 <a class="header-anchor" href="#方法签名" aria-label="Permalink to &quot;方法签名&quot;">​</a></h3><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>yoyo(value: Boolean): [Boolean | self]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>获取或设置时间轴的 yoyo 状态。</p><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><strong>value</strong>: Boolean <ul><li>默认值为 <code>false</code>。省略参数时返回当前值（getter），定义参数时设置值（setter），并返回实例本身以便于链式调用。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>[Boolean | self] <ul><li>省略参数时返回当前值（getter），定义参数时设置值（setter），并返回实例本身以便于链式调用。</li></ul></li></ul><h3 id="详细信息-details" tabindex="-1">详细信息（Details） <a class="header-anchor" href="#详细信息-details" aria-label="Permalink to &quot;详细信息（Details）&quot;">​</a></h3><p>获取或设置时间轴的 <code>yoyo</code> 状态，当设置为 <code>true</code> 时，时间轴在每次重复时会来回播放，即在正向和反向之间交替进行。<code>yoyo</code> 与 <code>repeat</code> 属性一起工作，其中 <code>repeat</code> 控制时间轴重复的次数，而 <code>yoyo</code> 控制每次重复是否改变方向。因此，要使时间轴具有 yoyo 效果，你必须将其 <code>repeat</code> 设置为非零值。</p><p>Yoyo 效果不影响时间轴的 <code>reversed</code> 属性。例如，如果 <code>repeat</code> 是 2 且 <code>yoyo</code> 是 <code>false</code>，它将看起来像：开始 - 1 - 2 - 3 - 1 - 2 - 3 - 1 - 2 - 3 - 结束。但如果 <code>yoyo</code> 是 <code>true</code>，它将看起来像：开始 - 1 - 2 - 3 - 3 - 2 - 1 - 1 - 2 - 3 - 结束。</p><p>你可以通过在 <code>vars</code> 参数中传递 <code>yoyo: true</code> 来初始设置 <code>yoyo</code> 属性，如：<code>gsap.timeline({repeat: 1, yoyo: true});</code></p><p>此方法既作为 getter 也作为 setter。省略参数时返回当前值（getter），定义参数时设置值（setter），并返回实例本身以便于链式调用，如 <code>myTimeline.yoyo(true).repeat(3).timeScale(2).play(0.5);</code></p><h3 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前 yoyo 状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yoyo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yoyo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将 yoyo 设置为 true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yoyo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,17)]))}const u=a(t,[["render",l]]);export{y as __pageData,u as default};
