import{l as p,c as a,a as e,a7 as t}from"./chunks/framework.dOJbCP6k.js";const m=JSON.parse('{"title":"原生小程序转 uniapp 详细教程","description":"","frontmatter":{},"headers":[],"relativePath":"content/docs/20.md","filePath":"content/docs/20.md","lastUpdated":1721038367000}'),i={name:"content/docs/20.md"},n=t('<h1 id="原生小程序转-uniapp-详细教程" tabindex="-1">原生小程序转 uniapp 详细教程 <a class="header-anchor" href="#原生小程序转-uniapp-详细教程" aria-label="Permalink to &quot;原生小程序转 uniapp 详细教程&quot;">​</a></h1><h2 id="使用须知" tabindex="-1">使用须知 <a class="header-anchor" href="#使用须知" aria-label="Permalink to &quot;使用须知&quot;">​</a></h2><ul><li>该方法同样适用于 QQ、头条/抖音、支付宝/钉钉和百度等小程序</li><li>必须是用原生小程序语言的项目才可以转换为 uniapp 项目</li></ul><h2 id="下载-uniapp-官方推荐的转换工具" tabindex="-1">下载 uniapp 官方推荐的转换工具 <a class="header-anchor" href="#下载-uniapp-官方推荐的转换工具" aria-label="Permalink to &quot;下载 uniapp 官方推荐的转换工具&quot;">​</a></h2><blockquote><p><a href="https://ext.dcloud.net.cn/plugin?id=2656" target="_blank" rel="noreferrer">https://ext.dcloud.net.cn/plugin?id=2656</a></p></blockquote><p>点击下载插件并导入 HbuilderX,可能会要求看微信广告，我们看完一个微信广告之后就可以下载安装了。</p><p><img src="http://cdn.bingkele.cc/Fmy6aJ1M82O4HqorZZnApd6sYSzs" alt=""></p><p>HbuilderX 界面弹出这个提示则安装成功了</p><p>下一步，我们在 HbuilderX 导入原生微信小程序的项目根目录</p><p><img src="http://cdn.bingkele.cc/FiofHjLYaTa2l0K3LR7aBmPyK8pl" alt=""></p><p>我们会看到项目名字的前面会有小程序的图标，则说明 HbuilderX 成功识别了项目为小程序的项目</p><p>如何在项目名上点击鼠标右键，在弹出菜单中选择<code>miniprogram to uniapp v2</code></p><p><img src="http://cdn.bingkele.cc/FuLpefro3kLO6w00Kv-19n03hFay" alt=""></p><p>然后会弹出以下窗口</p><p><img src="http://cdn.bingkele.cc/Fp31TUomjzObKiMkTKUtczoKzIMI" alt=""></p><p><strong>配置说明</strong></p><ul><li><p>合并 wxss 文件到 vue 文件里 默认为 true，即将 wxss 等样式文件合并到 vue 文件，成为一个单独 vue 文件。设为 false 则将样式文件单独生成一个 css 文件。</p></li><li><p>转换 template 和 include 标签为组件(实验功能) 默认为 false, 将 template 和 include 标签转换为组件，以便减少项目体积，按需使用。</p></li></ul><p>点击开始转换，然后就会看到控制台出现了转换进度，等待他转换结束即可。</p><p>出现如下界面则转换成功</p><p><img src="http://cdn.bingkele.cc/FuQosH0r5ev4BLvfvcy1FyV4LtXU" alt=""></p><p>然后我们会看到 HbuilderX 的项目目录中会出现转换后的项目，如果未出现，则需要手动找到他转换后生成的项目目录并导入到 HbuilderX 中</p><p><img src="http://cdn.bingkele.cc/FpUL17feYYr_5FwT4xJ0ge7WYb4Q" alt=""></p><p>导入到 HbuilderX 中我们会发现项目前面的图标为 uniapp 的图标</p><p><img src="http://cdn.bingkele.cc/FkSAHaHH57S1EfoDpKF-7kH9niat" alt=""></p><p>转换后直接在 HbuilderX 中编译到其他端就可以了</p><h2 id="报错说明" tabindex="-1">报错说明 <a class="header-anchor" href="#报错说明" aria-label="Permalink to &quot;报错说明&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>如果项目中使用到了一些不兼容多端的 UI 组件库，则转换后无法再次编译到其他端，推荐使用一些支持多端的 UI 组件库例如 Uview、ColorUI 等</p></div><h2 id="转换后的工作" tabindex="-1">转换后的工作 <a class="header-anchor" href="#转换后的工作" aria-label="Permalink to &quot;转换后的工作&quot;">​</a></h2><h3 id="wx-是否要替换为-uni" tabindex="-1">wx.是否要替换为 uni.？ <a class="header-anchor" href="#wx-是否要替换为-uni" aria-label="Permalink to &quot;wx.是否要替换为 uni.？&quot;">​</a></h3><p>关于 js api 中的<code>wx.</code>，不要全局替换为<code>uni.</code>。因为有的 wx 的 api 是微信独有的，替换为 uni 后，反而在微信下没法用了。</p><p>同时 uni-app 编译器提供了把<code>wx.</code>编译为不同平台的机制，所以直接使用<code>wx.</code>的 api 完全可以正常在各端运行。</p><p>所以对于老代码，替不替换不重要，不影响运行，只影响语法提示和转到定义。</p><p>但是新写的代码，还是要用<code>uni.</code>的 api，在代码提示、转到定义方面更强大。</p><h3 id="app-端迁移-还需处理服务端相关代码" tabindex="-1">App 端迁移，还需处理服务端相关代码 <a class="header-anchor" href="#app-端迁移-还需处理服务端相关代码" aria-label="Permalink to &quot;App 端迁移，还需处理服务端相关代码&quot;">​</a></h3><p>如果把微信小程序转换为 uni-app，仍然用于发布微信小程序，那服务器端代码不变。</p><p>但如果要发布到 App、其他小程序等平台，服务器也需要调整部分代码。比如登陆、支付、推送、定位、地图等联网服务。</p><p>uni-app 在客户端侧提供了统一的代码，比如<code>uni.login</code>、<code>uni.requestPayment</code>，在不同端均可以实现登陆、支付。</p><p>但服务器端的接口不一样，比如微信的 App 支付和小程序支付的申请开通、服务器接口都不一样，所以配置和服务器接口仍需单独处理。</p><p>比如把小程序转换 uni-app 后，需要打包发布为 app，则需要向微信申请 app 支付的资质，拿到 appkey 等信息，填写到 uni-app 工程的 manifest-app -&gt; sdk 配置 -&gt; 微信支付 下面，然后打包才能成效（如果是离线打包，参考离线打包的文件）。同时服务器需要按照微信的 App 支付的接口再开发对接。</p><p>同样微信小程序里内置的定位、地图，在 app 上，需要单独向高德等三方服务商申请，否则无法在 app 里使用这些服务。</p><p>这些 sdk 申请方式在 manifest -&gt; app sdk 配置 下有教程链接。</p><h3 id="其他注意" tabindex="-1">其他注意 <a class="header-anchor" href="#其他注意" aria-label="Permalink to &quot;其他注意&quot;">​</a></h3><p>参考：这里有一个转换示例，把 vant weapp 的小程序演示 demo，转换为 uni-app 工程，里面的 pages 下同时保留了 wxml 和 vue，可用于对比参考。<a href="http://ext.dcloud.net.cn/plugin?id=302" target="_blank" rel="noreferrer">http://ext.dcloud.net.cn/plugin?id=302</a></p>',43),l=[n];function c(o,r,d,u,s,h){return e(),a("div",null,l)}const k=p(i,[["render",c]]);export{m as __pageData,k as default};
