import{l as e,c as l,v as i,i as a,K as p,a5 as n,F as h,a as r}from"./chunks/framework.DJyBczLA.js";const b=JSON.parse('{"title":"GSAP中文文档 - CustomWiggle","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/easing/custom-wiggle.md","filePath":"gsap/easing/custom-wiggle.md","lastUpdated":1733646466000}'),k={name:"gsap/easing/custom-wiggle.md"},g={id:"customwiggle",tabindex:"-1"};function o(d,s,E,u,c,m){const t=h("Badge");return r(),l("div",null,[s[3]||(s[3]=i("h1",{id:"gsap中文文档-customwiggle",tabindex:"-1"},[a("GSAP中文文档 - CustomWiggle "),i("a",{class:"header-anchor",href:"#gsap中文文档-customwiggle","aria-label":'Permalink to "GSAP中文文档 - CustomWiggle"'},"​")],-1)),i("h2",g,[s[0]||(s[0]=a("CustomWiggle ")),p(t,{text:"会员特权"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#customwiggle","aria-label":'Permalink to "CustomWiggle <Badge text="会员特权"/>"'},"​",-1))]),s[4]||(s[4]=n(`<details class="details custom-block"><summary>快速开始</summary><p>CustomWiggle 是 GSAP 俱乐部的特权功能，立即加入或使用此试用链接免费试用。它在本地主机、Codepen、CodeSandbox 和 Stackblitz 上均可使用。</p><p>CDN链接：<a href="https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/CustomWiggle.min.js" target="_blank" rel="noreferrer">https://s3-us-west-2.amazonaws.com/s.cdpn.io/16327/CustomWiggle.min.js</a></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CustomEase, CustomWiggle)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用示例" tabindex="-1">使用示例： <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个默认类型为 &quot;easeOut&quot;，有6次振荡的抖动效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CustomWiggle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { wiggles: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 现在在缓动中使用它。&quot;rotation&quot; 将旋转到 30 度，然后以相同的幅度反向抖动，最终回到起始位置。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.class&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rotation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ease: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><p>CustomWiggle 是 GSAP 中的一个插件，它继承自 CustomEase，因此在使用 CustomWiggle 时，也需要在你的项目中包含 CustomEase。CustomWiggle 允许你设置抖动的量（wiggle amount）和类型（type）。</p><h2 id="动画演示" tabindex="-1">动画演示 <a class="header-anchor" href="#动画演示" aria-label="Permalink to &quot;动画演示&quot;">​</a></h2><p>CustomWiggle Types</p>`,5)),s[5]||(s[5]=i("iframe",{src:"https://codepen.io/GreenSock/pen/oNvQeMM",frameborder:"no",loading:"lazy",width:"100%",height:"500",allowtransparency:"true",allowfullscreen:"true"},null,-1)),s[6]||(s[6]=n(`<h2 id="配置对象" tabindex="-1">配置对象 <a class="header-anchor" href="#配置对象" aria-label="Permalink to &quot;配置对象&quot;">​</a></h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>wiggles</td><td><strong>整数</strong> - 来回振荡的次数。默认值：10。</td></tr><tr><td>type</td><td><strong>字符串</strong> - 抖动的类型（或风格）。可选值：&quot;easeOut&quot;、&quot;easeInOut&quot;、&quot;anticipate&quot;、&quot;uniform&quot;、&quot;random&quot;。默认值：&quot;easeOut&quot;。（参见上面的演示）。</td></tr><tr><td>amplitudeEase</td><td><strong>缓动函数</strong> - 提供对振幅（在缓动可视化工具中为y轴）形状的高级控制。你定义一个缓动函数来控制振幅从1向0在补间过程中的进展。定义amplitudeEase（或timingEase）将覆盖&quot;type&quot;（将5个&quot;类型&quot;视为amplitudeEase和timingEase组合的便捷预设）。参见示例CodePen进行操作和可视化了解其工作原理。</td></tr><tr><td>timingEase</td><td><strong>缓动函数</strong> - 提供对波形如何随时间绘制的高级控制（在缓动可视化工具中为x轴）。定义timingEase（或amplitudeEase）将覆盖&quot;type&quot;（将5个&quot;类型&quot;视为amplitudeEase和timingEase组合的便捷预设）。参见示例CodePen进行操作和可视化了解其工作原理。</td></tr></tbody></table><p>如何控制抖动的强度（或者它移动的距离）？只需设置补间动画属性值本身即可。例如，一个旋转到30度（rotation:30）的抖动会比旋转到10度（rotation:10）的抖动更强。请记住，缓动只控制向您为补间中的每个属性提供的值的移动比例。</p><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CustomEase, CustomWiggle) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个有6个振荡的摆动（默认类型：&quot;easeOut&quot;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CustomWiggle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { wiggles: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 现在在缓动中使用它。&quot;rotation&quot; 将摆动到 30 然后以相同的幅度反向摆动，最终回到起始位置。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.class&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rotation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ease: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个10次摆动的预备动作缓动：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CustomWiggle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;funWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { wiggles: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;anticipate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.class&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rotation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ease: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;funWiggle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 或者，确保 CustomWiggle 已加载并使用 GSAP 的字符串缓动格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ease</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wiggle(15)&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //&lt;-- 简单!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ease</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wiggle({type:anticipate, wiggles:8})&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //高级</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>摆动不仅仅适用于 &quot;rotation&quot;；你可以将它用于任何属性。例如，你可以通过在 &quot;x&quot; 和 &quot;y&quot; 上使用仅两个随机化的摆动 tween 来创建一个群体效果，如<a href="https://codepen.io/GreenSock/pen/wzkBYZ" target="_blank" rel="noreferrer">这里所示</a>。</p><h2 id="示例合集" tabindex="-1">示例合集 <a class="header-anchor" href="#示例合集" aria-label="Permalink to &quot;示例合集&quot;">​</a></h2><ul><li><a href="https://codepen.io/collection/AxZmqK" target="_blank" rel="noreferrer">CustomWiggle demos</a></li></ul>`,8))])}const C=e(k,[["render",o]]);export{b as __pageData,C as default};
