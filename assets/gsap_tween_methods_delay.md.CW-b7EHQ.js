import{l as a,a as s,c as i,a5 as l}from"./chunks/framework.DAV8GD4U.js";const k=JSON.parse('{"title":"GSAP中文文档 - tween 方法 - 延迟（delay）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/tween/methods/delay.md","filePath":"gsap/tween/methods/delay.md","lastUpdated":1731921447000}'),t={name:"gsap/tween/methods/delay.md"};function n(d,e,r,o,h,p){return s(),i("div",null,e[0]||(e[0]=[l(`<h1 id="gsap中文文档-tween-方法-延迟-delay" tabindex="-1">GSAP中文文档 - tween 方法 - 延迟（delay） <a class="header-anchor" href="#gsap中文文档-tween-方法-延迟-delay" aria-label="Permalink to &quot;GSAP中文文档 - tween 方法 - 延迟（delay）&quot;">​</a></h1><h2 id="延迟-delay" tabindex="-1">延迟（delay） <a class="header-anchor" href="#延迟-delay" aria-label="Permalink to &quot;延迟（delay）&quot;">​</a></h2><p>省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用。</p><p>获取或设置动画的初始 <code>delay</code>，这是动画开始之前的秒数。补间的起始值在 <code>delay</code> 过期后才会被记录（除非在 <code>from()</code> 补间中默认立即渲染，除非在 <code>vars</code> 参数中设置了 <code>immediateRender: false</code>）。动画的 <code>delay</code> 不受其 <code>timeScale</code> 的影响，因此，例如，如果你将 <code>timeScale</code> 从 <code>1</code> 改为 <code>10</code>，它不会导致延迟增加十倍。</p><p>此方法既作为获取器也作为设置器。省略参数时返回当前值（获取器），而定义参数则设置该值（设置器），并返回实例本身以便于链式调用，如 <code>myAnimation.delay(2).timeScale(0.5).restart(true);</code></p><h2 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h2><ul><li><strong>value</strong>: Number（可选） <ul><li>设置动画的延迟时间。</li></ul></li></ul><h2 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h2><ul><li>Number <ul><li>如果未提供参数，返回当前延迟时间。</li></ul></li><li>self <ul><li>如果提供了参数，返回实例本身以便于链式调用。</li></ul></li></ul><h2 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentDelay </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myAnimation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前延迟</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myAnimation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置延迟为2秒</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,11)]))}const m=a(t,[["render",n]]);export{k as __pageData,m as default};
