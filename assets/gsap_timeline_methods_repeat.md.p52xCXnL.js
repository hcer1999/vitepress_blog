import{l as s,a as e,c as i,a5 as n}from"./chunks/framework.DAV8GD4U.js";const c=JSON.parse('{"title":"GSAP中文文档 - timeline 方法 - 重复（repeat）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/timeline/methods/repeat.md","filePath":"gsap/timeline/methods/repeat.md","lastUpdated":1731921447000}'),t={name:"gsap/timeline/methods/repeat.md"};function l(p,a,r,h,d,o){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="gsap中文文档-timeline-方法-重复-repeat" tabindex="-1">GSAP中文文档 - timeline 方法 - 重复（repeat） <a class="header-anchor" href="#gsap中文文档-timeline-方法-重复-repeat" aria-label="Permalink to &quot;GSAP中文文档 - timeline 方法 - 重复（repeat）&quot;">​</a></h1><h2 id="重复-repeat" tabindex="-1">重复（repeat） <a class="header-anchor" href="#重复-repeat" aria-label="Permalink to &quot;重复（repeat）&quot;">​</a></h2><p>repeat 方法用于获取或设置时间轴在首次迭代后应重复的次数。</p><h3 id="方法签名" tabindex="-1">方法签名 <a class="header-anchor" href="#方法签名" aria-label="Permalink to &quot;方法签名&quot;">​</a></h3><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>repeat(value: Integer): self</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>获取或设置时间轴在首次迭代后应重复的次数。</p><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><strong>value</strong>: Integer <ul><li>要设置的时间轴重复次数。如果设置为 <code>-1</code>，则时间轴将无限重复。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>self <ul><li>返回实例本身，便于链式调用。</li></ul></li></ul><h3 id="详细信息-details" tabindex="-1">详细信息（Details） <a class="header-anchor" href="#详细信息-details" aria-label="Permalink to &quot;详细信息（Details）&quot;">​</a></h3><p>省略参数时，<code>repeat()</code> 方法将返回当前的重复次数（getter）。如果提供了参数，则设置时间轴的重复次数（setter），并返回实例本身以便于链式调用。</p><p>例如，如果 <code>repeat</code> 设置为 <code>1</code>，则时间轴将总共播放两次（初始播放加上1次重复）。要使重复在正向和反向之间交替，可以将 <code>yoyo</code> 参数设置为 <code>true</code>。要在重复之间添加时间间隔，可以使用 <code>repeatDelay</code> 参数。</p><h3 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取当前重复值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> repeatValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将时间轴的重复次数设置为2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置时间轴无限重复，并使动画在正向和反向之间交替</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yoyo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,15)]))}const u=s(t,[["render",l]]);export{c as __pageData,u as default};
