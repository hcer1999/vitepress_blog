import{l as e,c as a,a5 as r,a as i}from"./chunks/framework.DJyBczLA.js";const c=JSON.parse('{"title":"Hammer.Swipe(options)","description":"","frontmatter":{},"headers":[],"relativePath":"hammerjs/recognizer-swipe.md","filePath":"hammerjs/recognizer-swipe.md","lastUpdated":1733646466000}'),d={name:"hammerjs/recognizer-swipe.md"};function o(s,t,p,l,n,h){return i(),a("div",null,t[0]||(t[0]=[r('<h1 id="hammer-swipe-options" tabindex="-1">Hammer.Swipe(options) <a class="header-anchor" href="#hammer-swipe-options" aria-label="Permalink to &quot;Hammer.Swipe(options)&quot;">​</a></h1><p>当指针快速移动（速度足够）且在允许的方向上移动了足够的距离时，将识别Swipe手势。</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>event</td><td>swipe</td><td>事件名称。</td></tr><tr><td>pointers</td><td>1</td><td>需要的指针数量。</td></tr><tr><td>threshold</td><td>10</td><td>识别前所需的最小距离。</td></tr><tr><td>direction</td><td>DIRECTION_ALL</td><td>允许的Swipe方向。</td></tr><tr><td>velocity</td><td>0.3</td><td>识别前所需的最小速度，单位为像素/毫秒。</td></tr></tbody></table><h1 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h1><ul><li>swipe（以及以下所有事件）</li><li>swipeleft</li><li>swiperight</li><li>swipeup</li><li>swipedown</li></ul><h1 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h1><p>当调用<code>Hammer()</code>创建一个简单实例时，Pan和Swipe识别器被配置为仅检测水平手势。</p>',7)]))}const w=e(d,[["render",o]]);export{c as __pageData,w as default};
