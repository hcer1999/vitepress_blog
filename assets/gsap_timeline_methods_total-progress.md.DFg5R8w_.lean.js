import{l as a,a as e,c as t,a5 as i}from"./chunks/framework.DAV8GD4U.js";const g=JSON.parse('{"title":"GSAP中文文档 - timeline 方法 - 总进度（totalProgress）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/timeline/methods/total-progress.md","filePath":"gsap/timeline/methods/total-progress.md","lastUpdated":1731921447000}'),l={name:"gsap/timeline/methods/total-progress.md"};function r(n,s,o,p,d,h){return e(),t("div",null,s[0]||(s[0]=[i(`<h1 id="gsap中文文档-timeline-方法-总进度-totalprogress" tabindex="-1">GSAP中文文档 - timeline 方法 - 总进度（totalProgress） <a class="header-anchor" href="#gsap中文文档-timeline-方法-总进度-totalprogress" aria-label="Permalink to &quot;GSAP中文文档 - timeline 方法 - 总进度（totalProgress）&quot;">​</a></h1><h2 id="总进度-totalprogress" tabindex="-1">总进度（totalProgress） <a class="header-anchor" href="#总进度-totalprogress" aria-label="Permalink to &quot;总进度（totalProgress）&quot;">​</a></h2><p>totalProgress 方法用于获取或设置时间轴的总进度，这是一个介于 0 和 1 之间的值，表示虚拟播放头的位置（<strong>包括</strong>重复次数和重复延迟），其中 0 表示开始，0.5 表示中间点，1 表示结束（完成）。如果时间轴定义了非零的 <code>repeat</code>，<code>progress()</code> 和 <code>totalProgress()</code> 将会不同，因为 <code>progress()</code> 不包括 <code>repeat</code> 或 <code>repeatDelay</code>，而 <code>totalProgress()</code> 包括。</p><h3 id="方法签名" tabindex="-1">方法签名 <a class="header-anchor" href="#方法签名" aria-label="Permalink to &quot;方法签名&quot;">​</a></h3><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>totalProgress(value: Number): self</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>获取或设置时间轴的总进度。</p><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><strong>value</strong>: Number <ul><li>要设置的总进度值（介于 0 和 1 之间）。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>self <ul><li>返回实例本身，便于链式调用。</li></ul></li></ul><h3 id="详细信息-details" tabindex="-1">详细信息（Details） <a class="header-anchor" href="#详细信息-details" aria-label="Permalink to &quot;详细信息（Details）&quot;">​</a></h3><ul><li>如果省略参数，<code>totalProgress()</code> 方法将返回当前值（getter）。</li><li>如果定义了参数，它将设置值（setter），并返回实例本身以便于链式调用。</li></ul><p>例如，如果一个时间轴实例设置为重复一次，在第一个周期结束时，<code>totalProgress()</code> 仅为 0.5，而 <code>progress</code> 为 1。如果在整个动画过程中观察这两个属性，你会看到 <code>progress</code> 从 0 到 1 两次（每个周期一次），而 <code>totalProgress()</code> 仅从 0 到 1 一次。</p><h3 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取总进度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">totalProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将总进度设置为完成四分之一</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">totalProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,15)]))}const u=a(l,[["render",r]]);export{g as __pageData,u as default};
