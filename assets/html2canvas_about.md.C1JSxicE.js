import{l as e,c as t,a5 as l,a as o}from"./chunks/framework.DJyBczLA.js";const m=JSON.parse('{"title":"HTML2CANVAS 中文文档","description":"","frontmatter":{},"headers":[],"relativePath":"html2canvas/about.md","filePath":"html2canvas/about.md","lastUpdated":1733646466000}'),r={name:"html2canvas/about.md"};function i(n,a,s,h,c,d){return o(),t("div",null,a[0]||(a[0]=[l('<h1 id="html2canvas-中文文档" tabindex="-1">HTML2CANVAS 中文文档 <a class="header-anchor" href="#html2canvas-中文文档" aria-label="Permalink to &quot;HTML2CANVAS 中文文档&quot;">​</a></h1><h2 id="关于html2canvas" tabindex="-1">关于html2canvas <a class="header-anchor" href="#关于html2canvas" aria-label="Permalink to &quot;关于html2canvas&quot;">​</a></h2><p>了解 html2canvas，它是如何工作的以及它的一些局限性。</p><p>在你开始使用这个脚本以前，这里有些帮助你更好的了解脚本的好处及其的一些局限性。</p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>html2canvas 是一个 HTML 渲染器。该脚本允许你直接在用户浏览器截取页面或部分网页的“屏幕截屏”，屏幕截图是基于 DOM，因此生成的图片并不一定 100% 一致，因为它没有制作实际的屏幕截图，而是根据页面上可用的信息构建屏幕截图。</p><h2 id="它是如何工作的" tabindex="-1">它是如何工作的 <a class="header-anchor" href="#它是如何工作的" aria-label="Permalink to &quot;它是如何工作的&quot;">​</a></h2><p>该脚本通过读取 DOM 以及应用于元素的不同样式，将当前页面呈现为 canvas 图像。</p><p>它不需要来自服务器的任何渲染，因为整个图像是在客户端上创建的。但是，由于它太依赖于浏览器，因此该库不适合在 <code>nodejs</code> 中使用。它也不会神奇地规避任何浏览器内容策略限制，因此呈现跨域内容将需要代理来将内容提供给相同的源。</p><p>该脚本仍然处理非常实验状态，因此不建议在生产环境中使用它，也不建议使用它来构建应用程序，因为仍然会有重大更改。</p><h2 id="浏览器兼容性" tabindex="-1">浏览器兼容性 <a class="header-anchor" href="#浏览器兼容性" aria-label="Permalink to &quot;浏览器兼容性&quot;">​</a></h2><p>该库应该可以在以下浏览器上正常工作</p><ul><li>Firefox 3.5+</li><li>Google Chrome</li><li>Opera 12+</li><li>IE9+</li><li>Edge</li><li>Safari 6+</li></ul><p>::: TIP 由于需要手动构建每一个 CSS 属性以支持，因此还有许多尚不支持的属性。 :::</p>',14)]))}const u=e(r,[["render",i]]);export{m as __pageData,u as default};
