import{l as a,c as i,a5 as e,a as n}from"./chunks/framework.DJyBczLA.js";const g=JSON.parse('{"title":"GSAP中文文档 - gsap.getTweensOf()","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/gsap/methods/get-tweens-of.md","filePath":"gsap/gsap/methods/get-tweens-of.md","lastUpdated":1733646466000}'),t={name:"gsap/gsap/methods/get-tweens-of.md"};function l(p,s,h,k,r,o){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="gsap中文文档-gsap-gettweensof" tabindex="-1">GSAP中文文档 - gsap.getTweensOf() <a class="header-anchor" href="#gsap中文文档-gsap-gettweensof" aria-label="Permalink to &quot;GSAP中文文档 - gsap.getTweensOf()&quot;">​</a></h1><h2 id="gsap-gettweensof" tabindex="-1">gsap.getTweensOf() <a class="header-anchor" href="#gsap-gettweensof" aria-label="Permalink to &quot;gsap.getTweensOf()&quot;">​</a></h2><p>返回一个数组，包含特定目标（或目标组）的所有尚未被释放用于垃圾回收的补间动画（Tweens）。</p><h4 id="返回值" tabindex="-1">返回值: <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值:&quot;">​</a></h4><ul><li>包含特定目标的所有补间动画的数组。</li><li>如果补间动画已完成，通常会被自动释放，这时将不会被此函数找到。</li></ul><h4 id="功能说明" tabindex="-1">功能说明: <a class="header-anchor" href="#功能说明" aria-label="Permalink to &quot;功能说明:&quot;">​</a></h4><p><code>gsap.getTweensOf()</code> 能够找到所有关联到指定目标且尚未完成的补间动画。例如，<code>gsap.getTweensOf(&quot;.myClass&quot;)</code> 将返回应用于 &quot;myClass&quot; 类的所有元素的所有补间动画的数组。您也可以直接传递实际的元素/目标/对象。</p><h4 id="示例代码" tabindex="-1">示例代码: <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码:&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj1, { x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 向 obj1 创建一个补间动画</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj2, { x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 向 obj2 创建一个补间动画</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([obj1, obj2], { opacity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 同时向 obj1 和 obj2 创建一个不透明度的补间动画</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTweensOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj1) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查找 obj1 的 2 个补间动画</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTweensOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([obj1, obj2]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查找 obj1 和 obj2 的 3 个补间动画</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="注意事项" tabindex="-1">注意事项: <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项:&quot;">​</a></h4><ul><li>此方法仅能找到尚未被释放用于垃圾回收的补间动画。如果您创建了一个补间动画，让它完成后，之后再尝试使用 <code>getTweensOf()</code> 找到它，可能无法找到，因为它已经被引擎释放。</li><li>GSAP 的一大优点是它为您省去了手动管理垃圾回收的工作。否则，您需要手动处理每个创建的补间动画，这会让事情变得更加繁琐。</li></ul>`,11)]))}const E=a(t,[["render",l]]);export{g as __pageData,E as default};
