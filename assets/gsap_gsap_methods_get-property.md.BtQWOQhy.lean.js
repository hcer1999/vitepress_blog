import{l as i,a,c as t,a5 as e}from"./chunks/framework.DAV8GD4U.js";const g=JSON.parse('{"title":"GSAP中文文档 - gsap.getProperty()","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/gsap/methods/get-property.md","filePath":"gsap/gsap/methods/get-property.md","lastUpdated":1731921447000}'),p={name:"gsap/gsap/methods/get-property.md"};function n(l,s,h,r,k,d){return a(),t("div",null,s[0]||(s[0]=[e(`<h1 id="gsap中文文档-gsap-getproperty" tabindex="-1">GSAP中文文档 - gsap.getProperty() <a class="header-anchor" href="#gsap中文文档-gsap-getproperty" aria-label="Permalink to &quot;GSAP中文文档 - gsap.getProperty()&quot;">​</a></h1><h2 id="gsap-getproperty" tabindex="-1">gsap.getProperty() <a class="header-anchor" href="#gsap-getproperty" aria-label="Permalink to &quot;gsap.getProperty()&quot;">​</a></h2><p>返回属性的值，尽可能以数字形式（除非指定单位），如果属性不存在则返回 <code>null</code>。</p><h4 id="返回值" tabindex="-1">返回值: <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值:&quot;">​</a></h4><ul><li>如果可能，返回属性值的数字形式。</li><li>如果指定了单位，将单位添加到数字上，返回字符串形式。</li><li>如果属性不存在，返回 <code>null</code>。</li></ul><h4 id="基本用法" tabindex="-1">基本用法: <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法:&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回数字，例如 20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回字符串，例如 &quot;20px&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;backgroundColor&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回颜色值，例如 &quot;rgb(255, 128, 0)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="详细说明" tabindex="-1">详细说明: <a class="header-anchor" href="#详细说明" aria-label="Permalink to &quot;详细说明:&quot;">​</a></h4><p><code>getProperty()</code> 提供了一种简便的方式来获取任何属性的当前值。如果是 DOM 元素，您甚至可以让它转换为特定单位。对于 DOM 元素，它将按以下顺序检查属性（一旦找到就返回）：</p><ol><li>元素的内联 CSS</li><li>元素的 <code>.getComputedStyle()</code> CSS</li><li>元素自身的属性，如 <code>element.property</code></li><li>元素的属性，如 <code>element.getAttribute(property)</code></li></ol><p>如果省略单位参数，它将返回一个<strong>数字</strong>（至少对于简单值，<code>parseFloat()</code> 返回数字的情况）。例如，技术上是 &quot;20px&quot; 的 &quot;top&quot; 或 &quot;left&quot; 或 &quot;x&quot; 属性将返回 20（无单位后缀），因为在动画中经常需要处理数字。实际上，如果从 getProperty() 获取像 &quot;20px&quot; 这样的值，并手动将其包装在 <code>parseFloat()</code> 中，将会很烦人。但如果您想要包含单位，只需传入单位，如 <code>gsap.getProperty(&quot;#element&quot;, &quot;x&quot;, &quot;px&quot;)</code>，它将相应地返回字符串。</p><h4 id="示例" tabindex="-1">示例: <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例:&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;width&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以使用选择器文本</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bgColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;backgroundColor&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转换为特定单位，如 em</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;width&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;em&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="可重用的-getter-函数" tabindex="-1">可重用的 getter 函数: <a class="header-anchor" href="#可重用的-getter-函数" aria-label="Permalink to &quot;可重用的 getter 函数:&quot;">​</a></h4><p>如果您省略了 <code>property</code> 参数，<code>gsap.getProperty()</code> 将返回一个 getter 函数，您可以重用它来获取目标对象的属性：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;em&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以 em 为单位</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,16)]))}const o=i(p,[["render",n]]);export{g as __pageData,o as default};
