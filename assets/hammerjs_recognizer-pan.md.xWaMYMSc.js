import{l as a,a as e,c as r,a5 as n}from"./chunks/framework.DAV8GD4U.js";const c=JSON.parse('{"title":"Hammer.Pan(options)","description":"","frontmatter":{},"headers":[],"relativePath":"hammerjs/recognizer-pan.md","filePath":"hammerjs/recognizer-pan.md","lastUpdated":1731921447000}'),d={name:"hammerjs/recognizer-pan.md"};function i(o,t,l,p,s,h){return e(),r("div",null,t[0]||(t[0]=[n('<h1 id="hammer-pan-options" tabindex="-1">Hammer.Pan(options) <a class="header-anchor" href="#hammer-pan-options" aria-label="Permalink to &quot;Hammer.Pan(options)&quot;">​</a></h1><p>当指针按下并允许在指定方向移动时，将识别Pan手势。</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>event</td><td>pan</td><td>事件名称。</td></tr><tr><td>pointers</td><td>1</td><td>需要的指针数量。0表示所有指针。</td></tr><tr><td>threshold</td><td>10</td><td>识别前所需的最小Pan距离。</td></tr><tr><td>direction</td><td>DIRECTION_ALL</td><td>Pan的移动方向。</td></tr></tbody></table><h1 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h1><ul><li>pan（以及以下所有事件）</li><li>panstart</li><li>panmove</li><li>panend</li><li>pancancel</li><li>panleft</li><li>panright</li><li>panup</li><li>pandown</li></ul><h1 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h1><p>当调用<code>Hammer()</code>创建一个简单实例时，Pan和Swipe识别器被配置为仅检测水平手势。</p>',7)]))}const u=a(d,[["render",i]]);export{c as __pageData,u as default};
