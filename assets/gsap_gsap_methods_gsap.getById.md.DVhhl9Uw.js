import{l as a,c as i,a5 as e,a as n}from"./chunks/framework.Cbnp_j6w.js";const E=JSON.parse('{"title":"gsap.getById()","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/gsap/methods/gsap.getById.md","filePath":"gsap/gsap/methods/gsap.getById.md","lastUpdated":1730284782000}'),t={name:"gsap/gsap/methods/gsap.getById.md"};function p(l,s,h,k,d,r){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="gsap-getbyid" tabindex="-1">gsap.getById() <a class="header-anchor" href="#gsap-getbyid" aria-label="Permalink to &quot;gsap.getById()&quot;">​</a></h1><p>这个函数用于获取与给定 ID 相关联的补间动画（Tween）或时间轴（Timeline）。如果没有任何补间动画或时间轴具有该 ID，则返回 <code>undefined</code>。</p><h4 id="功能说明" tabindex="-1">功能说明： <a class="header-anchor" href="#功能说明" aria-label="Permalink to &quot;功能说明：&quot;">​</a></h4><p>当创建一个补间动画或时间轴时，您可以为其分配一个 <code>id</code>，以便之后可以引用它。这在使用框架和构建工具（如 React）时非常有用，在这些工具中跟踪变量可能会很困难。</p><h4 id="示例代码" tabindex="-1">示例代码： <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码：&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个补间动画并为其分配一个 ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj, { id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myTween&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 稍后，通过 ID 获取补间动画</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tween </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myTween&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回补间动画</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pause</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以控制该补间动画，例如暂停</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="重要提示" tabindex="-1">重要提示： <a class="header-anchor" href="#重要提示" aria-label="Permalink to &quot;重要提示：&quot;">​</a></h4><p>GSAP 会在动画完成后不久自动释放它们，以便进行垃圾回收，因此 <code>getById()</code> 只能找到处于活动状态或尚未开始的动画。否则，如果保留所有动画以备不时之需，调用 <code>getById()</code> 来查找它们，这可能会导致系统迅速堵塞并引起内存泄漏。如果您需要在动画完成后仍然保持对动画的引用，您应该使用变量，如下所示：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myTween </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj, { id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myTween&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这样即使动画完成，您也可以通过变量 myTween 引用它</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,9)]))}const c=a(t,[["render",p]]);export{E as __pageData,c as default};
