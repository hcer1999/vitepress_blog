import{l as e,a as s,c as t,a5 as i}from"./chunks/framework.DAV8GD4U.js";const u=JSON.parse('{"title":"GSAP中文文档 - tween 方法 - 重新开始（restart）","description":"","frontmatter":{},"headers":[],"relativePath":"gsap/tween/methods/restart.md","filePath":"gsap/tween/methods/restart.md","lastUpdated":1731921447000}'),r={name:"gsap/tween/methods/restart.md"};function n(l,a,p,o,d,h){return s(),t("div",null,a[0]||(a[0]=[i(`<h1 id="gsap中文文档-tween-方法-重新开始-restart" tabindex="-1">GSAP中文文档 - tween 方法 - 重新开始（restart） <a class="header-anchor" href="#gsap中文文档-tween-方法-重新开始-restart" aria-label="Permalink to &quot;GSAP中文文档 - tween 方法 - 重新开始（restart）&quot;">​</a></h1><h2 id="重新开始-restart" tabindex="-1">重新开始（restart） <a class="header-anchor" href="#重新开始-restart" aria-label="Permalink to &quot;重新开始（restart）&quot;">​</a></h2><h3 id="参数-parameters" tabindex="-1">参数（Parameters） <a class="header-anchor" href="#参数-parameters" aria-label="Permalink to &quot;参数（Parameters）&quot;">​</a></h3><ul><li><p><strong>includeDelay</strong>: Boolean</p><ul><li>（默认值为 <code>false</code>）确定在重新开始时是否考虑延迟（如果有）。例如，如果一个补间有一个1秒的延迟，如 <code>gsap.to(obj, {duration: 2, x: 100, delay: 1});</code> 然后稍后调用 <code>restart()</code>，它将立即开始，但 <code>restart(true)</code> 将导致延迟被考虑，因此它将在1秒后才开始。</li></ul></li><li><p><strong>suppressEvents</strong>: Boolean</p><ul><li>（默认值为 <code>true</code>）如果为 <code>true</code>（默认值），当播放头移动到 <code>time</code> 参数定义的新位置时，不会触发任何事件或回调。</li></ul></li></ul><h3 id="返回值-returns" tabindex="-1">返回值（Returns） <a class="header-anchor" href="#返回值-returns" aria-label="Permalink to &quot;返回值（Returns）&quot;">​</a></h3><ul><li>self <ul><li>返回实例本身，便于链式调用。</li></ul></li></ul><h3 id="详细信息-details" tabindex="-1">详细信息（Details） <a class="header-anchor" href="#详细信息-details" aria-label="Permalink to &quot;详细信息（Details）&quot;">​</a></h3><p>重新开始并从开头向前播放。</p><h3 id="示例代码-example-code" tabindex="-1">示例代码（Example Code） <a class="header-anchor" href="#示例代码-example-code" aria-label="Permalink to &quot;示例代码（Example Code）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重新开始，不包括任何已定义的延迟</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myAnimation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重新开始，包括任何延迟，并在最初回到时间0时不抑制事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myAnimation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,10)]))}const k=e(r,[["render",n]]);export{u as __pageData,k as default};
